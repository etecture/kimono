{"version":3,"file":"xterminal.js","sourceRoot":"","sources":["xterminal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,EAAE,MAAM,YAAY,CAAC;AAE5B,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAUhE,MAAM,CAAC,MAAM,sBAAsB,GAAG;IACpC,UAAU,EAAE,+BAA+B;IAC3C,QAAQ,EAAE,EAAE;CACb,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAA6B,KAAK,CAAC,EAAE;IACzD,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;IAEnD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC;SACnB;QACD,MAAM,OAAO,GAAG,IAAI,mBAAmB,iCAClC,sBAAsB,GACtB,KAAK,CAAC,OAAO,EAChB,CAAC;QACH,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,OAAsB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC1C,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,KAAuC,EAAE,EAAE,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;IAEpH,OAAO,CACL,6BAAK,SAAS,EAAE,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,WAAW;QACnE,CAAC,KAAK,CAAC,GAAG,IAAI,6BAAK,SAAS,EAAC,8CAA8C,kBAAkB;QAC9F,6BAAK,GAAG,EAAE,OAAO,GAAI,CACjB,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from 'react';\n\nimport * as NodePty from 'node-pty';\n\nimport cx from 'classnames';\n\nimport { XTerminalPtyAdapter } from './utils/pty-react-adapter';\nimport { ITerminalOptions } from 'xterm';\n\ninterface XTerminalProps {\n  className?: string;\n  pty?: NodePty.IPty | null;\n  readOnly?: boolean;\n  options?: ITerminalOptions;\n}\n\nexport const defaultTerminalOptions = {\n  fontFamily: 'Fira Code, Iosevka, monospace',\n  fontSize: 12\n};\n\nexport const XTerminal: React.FC<XTerminalProps> = props => {\n  const element = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (!props.pty) {\n      return () => null;\n    }\n    const adapter = new XTerminalPtyAdapter({\n      ...defaultTerminalOptions,\n      ...props.options\n    });\n    adapter.setElement(element.current as HTMLElement);\n    adapter.setPty(props.pty, props.readOnly);\n    return () => adapter.destroy();\n  }, [props.pty]);\n\n  const { current: handleWheel } = React.useRef((event: React.WheelEvent<HTMLDivElement>) => event.stopPropagation());\n\n  return (\n    <div className={cx('XTermView', props.className)} onWheel={handleWheel}>\n      {!props.pty && <div className=\"notification is-dark is-family-code is-small\">Not started</div>}\n      <div ref={element} />\n    </div>\n  );\n};\n"]}