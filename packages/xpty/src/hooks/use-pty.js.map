{"version":3,"file":"use-pty.js","sourceRoot":"","sources":["use-pty.ts"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport path from 'path';\nimport * as NodePty from 'node-pty';\n\nimport treeKill from 'tree-kill';\nimport { platform } from 'os';\nimport { PtyOptions, defaults } from '../utils/pty-process-manager';\n\ninterface UsePtyOptions {\n  /**\n   * Whether to create the pty child process right away (even before `execute()` is called)\n   */\n  eager?: boolean;\n\n  /**\n   * Whether a created pty child process should be kept alive when the component unmounts.\n   */\n  resilient?: boolean;\n\n  /**\n   * Options for the pty. Only used if `eager` was set to true\n   */\n  ptyOptions?: Partial<PtyOptions>;\n}\n\ninterface UsePtyController {\n  /**\n   * The `node-pty` child process pty\n   */\n  pty: NodePty.IPty | null;\n\n  /**\n   * Executes a command string.\n   *\n   * Creates child process if none was created yet, or if an options object was provided.\n   * If an options object was provided, the current child process is killed and a new one is created.\n   * @param command - The command to execute\n   * @param options - Options for a pty child process to create.\n   */\n  execute: (command: string, options?: Partial<PtyOptions>) => void;\n\n  /**\n   * Kills the current pty child process, if there is one.\n   */\n  kill: (signal?: string) => void;\n\n  /**\n   * Writes SIGINT (Ctrl+C) to the child process, if there is one.\n   */\n  abort: () => void;\n\n  /**\n   * Changes the working directory of the child process, if there is one.\n   */\n  chdir: (cwd: string) => void;\n}\n\n/**\n * Creates a pty controller and returns it.\n */\nexport function usePty(hookOptions: UsePtyOptions = {}): UsePtyController {\n  const [pty, setPty] = React.useState<NodePty.IPty | null>(null);\n\n  /**\n   * Creates the child process\n   */\n  const { current: createPty } = React.useRef(function createPty(options?: Partial<PtyOptions>) {\n    const ptyOptions: PtyOptions = { ...defaults, ...options } as PtyOptions;\n    return NodePty.spawn(ptyOptions.shell, [], {\n      cols: ptyOptions.cols,\n      rows: ptyOptions.rows,\n      env: { ...(process.env as any), ...(ptyOptions.env as any) },\n      cwd: ptyOptions.cwd && path.resolve(ptyOptions.cwd as string)\n    });\n  });\n\n  const kill = React.useCallback(\n    function kill(signal = platform() === 'win32' ? undefined : 'SIGKILL') {\n      if (pty) {\n        treeKill(pty.pid, signal);\n        setPty(null);\n      }\n    },\n    [pty]\n  );\n\n  const execute = React.useCallback(\n    function execute(command: string, options?: Partial<PtyOptions>) {\n      let p = pty;\n      if (p && options) {\n        kill();\n      }\n\n      if (!p || options) {\n        p = createPty(options);\n        setPty(p);\n      }\n\n      if (!p) {\n        throw new Error('Unable to execute - child process unavailable');\n      }\n\n      p.write(command);\n      p.write('\\n');\n    },\n    [pty]\n  );\n\n  const abort = React.useCallback(\n    function abort() {\n      if (pty) {\n        pty.write('\\x03');\n        pty.write('\\n');\n      }\n    },\n    [pty]\n  );\n\n  const chdir = React.useCallback(\n    function chdir(cwd: string) {\n      if (pty) {\n        pty.write(`cd ${path.resolve(cwd)}`);\n        pty.write('\\n');\n      }\n    },\n    [pty]\n  );\n\n  React.useEffect(() => {\n    if (hookOptions.eager) {\n      setPty(createPty(hookOptions.ptyOptions));\n    }\n  }, [pty]);\n\n  React.useEffect(() => {\n    if (hookOptions.resilient) {\n      return () => null;\n    }\n    return () => {\n      kill();\n    };\n  }, []);\n\n  return { pty, execute, kill, abort, chdir };\n}\n"]}