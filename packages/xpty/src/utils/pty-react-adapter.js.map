{"version":3,"file":"pty-react-adapter.js","sourceRoot":"","sources":["pty-react-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * A wrapper around xterm.\n * Takes care of loading/handling addons (e.g resizing via FitAddon)\n */\n\nimport * as NodePty from 'node-pty';\n\nimport { Terminal, IDisposable, ITerminalOptions } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\n\nexport class XTerminalPtyAdapter {\n  readonly terminal: Terminal;\n\n  private fitAddon: FitAddon;\n  private resizeObserver?: ResizeObserver;\n  private currentWidth?: number;\n  private currentHeight?: number;\n\n  private delayedFitID?: number;\n\n  private ptyDataListener?: IDisposable;\n  private terminalDataListener?: IDisposable;\n  private terminalResizeListener?: IDisposable;\n\n  constructor(options?: ITerminalOptions) {\n    this.terminal = new Terminal(options);\n    this.fitAddon = new FitAddon();\n    this.terminal.loadAddon(this.fitAddon);\n  }\n\n  public setElement(element: HTMLElement) {\n    this.terminal.open(element);\n\n    this.fitAddon.fit();\n\n    this.resizeObserver = new window.ResizeObserver(([entry]: ResizeObserverEntry[]) => {\n      const width = Math.floor(entry.contentRect.width);\n      const height = Math.floor(entry.contentRect.height);\n      if (width !== this.currentWidth || height !== this.currentHeight) {\n        this.currentWidth = width;\n        this.currentHeight = height;\n        this.delayedFitID = window.requestAnimationFrame(() => this.fitAddon.fit());\n      }\n    });\n    this.resizeObserver.observe(element);\n  }\n\n  public setPty(pty: NodePty.IPty, readOnly?: boolean) {\n    this.ptyDataListener = pty.onData(data => {\n      this.terminal.write(data);\n    });\n    if (!readOnly) {\n      this.terminalDataListener = this.terminal.onData(data => {\n        pty.write(data);\n      });\n    }\n    this.terminalResizeListener = this.terminal.onResize(size => {\n      pty.resize(\n        Math.max(size ? size.cols : this.terminal.cols, 1),\n        Math.max(size ? size.rows : this.terminal.rows, 1)\n      );\n    });\n    pty.resize(this.terminal.cols, this.terminal.rows);\n  }\n\n  public destroy() {\n    if (this.delayedFitID) {\n      window.cancelAnimationFrame(this.delayedFitID);\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    if (this.fitAddon) {\n      this.fitAddon.dispose();\n    }\n    if (this.terminalDataListener) {\n      this.terminalDataListener.dispose();\n    }\n    if (this.terminalResizeListener) {\n      this.terminalResizeListener.dispose();\n    }\n    if (this.ptyDataListener) {\n      this.ptyDataListener.dispose();\n    }\n    this.terminal.dispose();\n  }\n}\n"]}